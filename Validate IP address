Problem : Given a string IP, return "IPv4" if IP is a valid IPv4 address, "IPv6" if IP is a valid IPv6 address or "Neither" if IP is not a correct IP of any type.

Example1: 

Input: IP = "172.16.254.1"
Output: "IPv4"
Explanation: This is a valid IPv4 address, return "IPv4".

Example2:

Input: IP = "2001:0db8:85a3:0:0:8A2E:0370:7334"
Output: "IPv6"
Explanation: This is a valid IPv6 address, return "IPv6".


Solution:

class Solution:
    def ipv4(self, IP):
        groups = IP.split(".")
        if len(groups)!=4:     // checking if length of each group is not equal to 4
            return False
        for part in groups:
            if part.isdigit() == False or part!= str(int(part)) or int(part)<0 or int(part)>255:   // if the part is not a digit return false  // if the part is leading with "0" i.e str(int(part)) return false 
                return False
        return "IPv4"
        
    def ipv6(self,IP):
        groups = IP.split(":")
        if len(groups)!=8:     // checking if length of each group is not equal to 8
            return False
        for part in groups:
            if len(part)>4 or len(part) ==0:
                return False
            for char in part:
                if char not in string.hexdigits:
                    return False
        return "IPv6"
    
    def validIPAddress(self, IP: str) -> str:
        return self.ipv4(IP) or self.ipv6(IP) or "Neither"
        
        
        
